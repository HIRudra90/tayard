{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hasidul%20Islam/Desktop/Book%20Tracking/book-tracker/src/app/api/books/route.ts"],"sourcesContent":["// src/app/api/books/route.ts\r\nimport { NextResponse } from 'next/server';\r\nimport { createClient } from '@supabase/supabase-js';\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY!;\r\n\r\nif (!supabaseUrl || !serviceRoleKey) {\r\n  console.error('Missing SUPABASE env vars on server. Ensure SUPABASE_SERVICE_ROLE_KEY is set.');\r\n}\r\n\r\nconst serverSupabase = createClient(supabaseUrl, serviceRoleKey);\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { data, error } = await serverSupabase\r\n      .from('books')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n\r\n    if (error) {\r\n      console.error('Supabase server error (GET /api/books):', error);\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n\r\n    return NextResponse.json(data ?? [], { status: 200 });\r\n  } catch (err: any) {\r\n    console.error('Unexpected error in /api/books GET:', err);\r\n    return NextResponse.json({ error: String(err) }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const body = await req.json();\r\n    if (!body?.title) return NextResponse.json({ error: 'Missing title' }, { status: 400 });\r\n\r\n    const insertPayload = {\r\n      title: body.title,\r\n      author: body.author ?? null,\r\n      status: body.status ?? 'wishlist',\r\n    };\r\n\r\n    const { data, error } = await serverSupabase.from('books').insert([insertPayload]);\r\n\r\n    if (error) {\r\n      console.error('Insert error (POST /api/books):', error);\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n\r\n    return NextResponse.json(data, { status: 201 });\r\n  } catch (err: any) {\r\n    console.error('Unexpected error in /api/books POST:', err);\r\n    return NextResponse.json({ error: String(err) }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;AAC7B;AACA;;;AAEA,MAAM;AACN,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;AAE5D,IAAI,CAAC,eAAe,CAAC,gBAAgB;IACnC,QAAQ,KAAK,CAAC;AAChB;AAEA,MAAM,iBAAiB,IAAA,yPAAY,EAAC,aAAa;AAE1C,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,eAC3B,IAAI,CAAC,SACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM;QAE1C,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2CAA2C;YACzD,OAAO,gMAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,OAAO,gMAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YAAE,QAAQ;QAAI;IACrD,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO,gMAAY,CAAC,IAAI,CAAC;YAAE,OAAO,OAAO;QAAK,GAAG;YAAE,QAAQ;QAAI;IACjE;AACF;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,IAAI,CAAC,MAAM,OAAO,OAAO,gMAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAgB,GAAG;YAAE,QAAQ;QAAI;QAErF,MAAM,gBAAgB;YACpB,OAAO,KAAK,KAAK;YACjB,QAAQ,KAAK,MAAM,IAAI;YACvB,QAAQ,KAAK,MAAM,IAAI;QACzB;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,eAAe,IAAI,CAAC,SAAS,MAAM,CAAC;YAAC;SAAc;QAEjF,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,mCAAmC;YACjD,OAAO,gMAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,OAAO,gMAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO,gMAAY,CAAC,IAAI,CAAC;YAAE,OAAO,OAAO;QAAK,GAAG;YAAE,QAAQ;QAAI;IACjE;AACF","debugId":null}}]
}
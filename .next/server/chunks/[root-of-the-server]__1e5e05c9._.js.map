{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Hasidul%20Islam/Desktop/Book%20Tracking/book-tracker/src/app/api/books/route.ts"],"sourcesContent":["// src/app/api/books/route.ts\r\nimport { NextResponse } from \"next/server\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\r\n\r\nif (!supabaseUrl || !serviceRoleKey) {\r\n  console.error(\"Missing SUPABASE env vars on server. Ensure NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY are set.\");\r\n  throw new Error(\"Missing SUPABASE env vars on server.\");\r\n}\r\n\r\nconst serverSupabase = createClient(supabaseUrl, serviceRoleKey, { auth: { persistSession: false } });\r\n\r\ntype IncomingBookBody = { title?: unknown; author?: unknown; status?: unknown };\r\n\r\nexport async function GET() {\r\n  try {\r\n    const { data, error } = await serverSupabase\r\n      .from(\"books\")\r\n      .select(\"*\")\r\n      .order(\"created_at\", { ascending: false });\r\n\r\n    if (error) {\r\n      console.error(\"Supabase server error (GET /api/books):\", error);\r\n      return NextResponse.json({ error: error.message }, { status: 500 });\r\n    }\r\n\r\n    const rows = Array.isArray(data) ? data : [];\r\n    return NextResponse.json(rows, { status: 200 });\r\n  } catch (err: unknown) {\r\n    console.error(\"Unexpected error in /api/books GET:\", err);\r\n    return NextResponse.json({ error: String(err) }, { status: 500 });\r\n  }\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const ct = req.headers.get(\"content-type\") ?? \"\";\r\n    if (!ct.includes(\"application/json\")) {\r\n      return NextResponse.json({ error: \"Expected application/json\" }, { status: 415 });\r\n    }\r\n\r\n    const raw = (await req.json()) as IncomingBookBody | null;\r\n    if (!raw || typeof raw !== \"object\") {\r\n      return NextResponse.json({ error: \"Invalid body\" }, { status: 400 });\r\n    }\r\n\r\n    if (!raw.title || typeof raw.title !== \"string\") {\r\n      return NextResponse.json({ error: \"Missing or invalid title\" }, { status: 400 });\r\n    }\r\n\r\n    const payload = {\r\n      title: raw.title,\r\n      author: typeof raw.author === \"string\" ? raw.author : null,\r\n      status:\r\n        raw.status === \"reading\" || raw.status === \"completed\" || raw.status === \"wishlist\"\r\n          ? String(raw.status)\r\n          : \"wishlist\",\r\n    };\r\n\r\n    const insertRes = await serverSupabase.from(\"books\").insert([payload]).select();\r\n\r\n    if (insertRes.error) {\r\n      console.error(\"Insert error (POST /api/books):\", insertRes.error);\r\n      return NextResponse.json({ error: insertRes.error.message }, { status: 500 });\r\n    }\r\n\r\n    return NextResponse.json(insertRes.data ?? [], { status: 201 });\r\n  } catch (err: unknown) {\r\n    console.error(\"Unexpected error in /api/books POST:\", err);\r\n    return NextResponse.json({ error: String(err) }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,6BAA6B;;;;;;;AAC7B;AACA;;;AAEA,MAAM;AACN,MAAM,iBAAiB,QAAQ,GAAG,CAAC,yBAAyB;AAE5D,IAAI,CAAC,eAAe,CAAC,gBAAgB;IACnC,QAAQ,KAAK,CAAC;IACd,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,iBAAiB,IAAA,yPAAY,EAAC,aAAa,gBAAgB;IAAE,MAAM;QAAE,gBAAgB;IAAM;AAAE;AAI5F,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,eAC3B,IAAI,CAAC,SACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM;QAE1C,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,2CAA2C;YACzD,OAAO,gMAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,MAAM,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QACnE;QAEA,MAAM,OAAO,MAAM,OAAO,CAAC,QAAQ,OAAO,EAAE;QAC5C,OAAO,gMAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,KAAc;QACrB,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO,gMAAY,CAAC,IAAI,CAAC;YAAE,OAAO,OAAO;QAAK,GAAG;YAAE,QAAQ;QAAI;IACjE;AACF;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,mBAAmB;QAC9C,IAAI,CAAC,GAAG,QAAQ,CAAC,qBAAqB;YACpC,OAAO,gMAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA4B,GAAG;gBAAE,QAAQ;YAAI;QACjF;QAEA,MAAM,MAAO,MAAM,IAAI,IAAI;QAC3B,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;YACnC,OAAO,gMAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,IAAI,CAAC,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK,KAAK,UAAU;YAC/C,OAAO,gMAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAA2B,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,MAAM,UAAU;YACd,OAAO,IAAI,KAAK;YAChB,QAAQ,OAAO,IAAI,MAAM,KAAK,WAAW,IAAI,MAAM,GAAG;YACtD,QACE,IAAI,MAAM,KAAK,aAAa,IAAI,MAAM,KAAK,eAAe,IAAI,MAAM,KAAK,aACrE,OAAO,IAAI,MAAM,IACjB;QACR;QAEA,MAAM,YAAY,MAAM,eAAe,IAAI,CAAC,SAAS,MAAM,CAAC;YAAC;SAAQ,EAAE,MAAM;QAE7E,IAAI,UAAU,KAAK,EAAE;YACnB,QAAQ,KAAK,CAAC,mCAAmC,UAAU,KAAK;YAChE,OAAO,gMAAY,CAAC,IAAI,CAAC;gBAAE,OAAO,UAAU,KAAK,CAAC,OAAO;YAAC,GAAG;gBAAE,QAAQ;YAAI;QAC7E;QAEA,OAAO,gMAAY,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE,EAAE;YAAE,QAAQ;QAAI;IAC/D,EAAE,OAAO,KAAc;QACrB,QAAQ,KAAK,CAAC,wCAAwC;QACtD,OAAO,gMAAY,CAAC,IAAI,CAAC;YAAE,OAAO,OAAO;QAAK,GAAG;YAAE,QAAQ;QAAI;IACjE;AACF","debugId":null}}]
}
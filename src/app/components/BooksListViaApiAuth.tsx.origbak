// src/app/components/BooksListViaApiAuth.tsx
import React, { useEffect, useState } from "react";

type Book = {
  id: string;
  title: string;
  author?: string | null;
  status?: "wishlist" | "reading" | "completed" | string;
  created_at?: string | null;
};

export default function BooksListViaApiAuth(): JSX.Element {
  const [books, setBooks] = useState<Book[] | null>(null);
  const [loading, setLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    let mounted = true;
    const fetchBooks = async () => {
      setLoading(true);
      setError(null);
      try {
        const res = await fetch("/api/books");
        if (!res.ok) {
          const txt = await res.text().catch(() => "Server error");
          throw new Error(txt || `Server ${res.status}`);
        }
        const data = await res.json();
        const arr: Book[] = Array.isArray(data) ? data : Array.isArray((data as any)?.books) ? (data as any).books : [];
        if (mounted) setBooks(arr);
      } catch (err: unknown) {
        if (mounted) setError(String(err));
      } finally {
        if (mounted) setLoading(false);
      }
    };

    fetchBooks();
    return () => {
      mounted = false;
    };
  }, []);

  if (loading) return <div>Loading books…</div>;
  if (error) return <div style={{ color: "red" }}>Error: {error}</div>;
  if (!books || books.length === 0) return <div>No books found</div>;

  return (
    <div>
      {books.map((b) => (
        <div key={b.id} style={{ padding: 8, borderBottom: "1px solid #eee" }}>
          <div style={{ fontWeight: 700 }}>{b.title}</div>
          <div style={{ color: "#666" }}>{b.author ?? "Unknown author"}</div>
        </div>
      ))}
    </div>
  );
}
